version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7
    environment:
      - APP_ENV: testing
      - APP_KEY: base64:3Q8fUzuSApciwiwHLgVBp/XdNK0SyhaHS7rp3Ib6g8c=
      - DB_CONNECTION: circle_test
      - MYSQL_ALLOW_EMPTY_PASSWORD: true
    steps:
      - checkout
      - run: sudo composer self-update --1
      - restore_cache:
          key: composer-v1-{{ checksum "./ecsite2/composer.lock" }}
      - run: composer install -n --prefer-dist --working-dir=./ecsite2/
      - save_cache:
          key: composer-v1-{{ checksum "./ecsite2/composer.lock" }}
          paths:
            - ./ecsite2/vendor
      - restore_cache:
          key: npm-v1-{{ checksum "./ecsite2/package-lock.json" }}
      - run:
          name: npm ci
          command: |
            if [ ! -d ./ecsite2/node_modules ]; then
              cd ecsite2/; npm ci
            fi
      - save_cache:
          key: npm-v1-{{ checksum "./ecsite2/package-lock.json" }}
          paths:
            - ./ecsite2/node_modules
      - run: cd ecsite2/; npm run dev
      - run:
          name: get ready for mysql
          command: |
            sudo apt-get update
            sudo apt-get install default-mysql-client
            sudo docker-php-ext-install pdo_mysql
            dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: cd ecsite2/; php artisan migrate
      - run: cd ecsite2/; php artisan db:seed
      - run:
          name: php test
          command: php ./ecsite2/vendor/bin/phpunit --configuration=./ecsite2/phpunit.xml
